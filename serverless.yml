org: rolandodiaz
service: api-comentario

provider:
  name: aws
  runtime: python3.12	
  # Default memory size for functions (default: 1024MB)
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::409362080365:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_comentarios
    BUCKET_NAME: ${sls:stage}-bucket-comentarios-ingesta

functions:
  crear:
    handler: comentario.lambda_handler
    events:
      - http:
          path: /comentario/crear
          method: post
          cors: true
          integration: lambda

resources:
  Resources:
    TablaComentarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: uuid
            KeyType: RANGE
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST
    
    # Bucket S3 de ingesta automática por stage
    BucketComentariosIngesta:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        VersioningConfiguration:
          Status: Enabled
        # Configuración para ingesta automática
        NotificationConfiguration:
          LambdaConfigurations:
            - Event: s3:ObjectCreated:*
              Function: !GetAtt CrearLambdaFunction.Arn
        # Opcional: Configurar lifecycle para limpiar versiones antiguas
        LifecycleConfiguration:
          Rules:
            - Id: DeleteOldVersions
              Status: Enabled
              NoncurrentVersionExpirationInDays: 30